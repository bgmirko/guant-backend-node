{"ast":null,"code":"var _jsxFileName = \"/home/mirko/Desktop/mirkosoft/quant-backend-node/quant-frontend-react/src/containers/AuthContainer.js\";\nimport React, { useState } from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport { getUser, logout, addNewUser } from '../redux/auth/actions';\nimport Login from '../components/auth/Login';\nimport Auth from '../components/auth/Auth';\nimport Logout from '../components/auth/Logout';\nimport Signup from '../components/auth/Signup';\n\nconst AuthContainer = props => {\n  const [state, setState] = useState({\n    typeOfAuth: null\n  });\n\n  const handleLogin = (e, email, password) => {\n    e.preventDefault();\n    props.onGetUser(email, password);\n  };\n\n  const handleNewUser = (e, {\n    email,\n    password,\n    name,\n    userName\n  }) => {\n    e.preventDefault();\n    props.onAddNewUser(email, password, name, userName);\n  };\n\n  const typeOfAuth = type => {\n    setState({ ...state,\n      typeOfAuth: type\n    });\n  };\n\n  const handleLogout = () => {\n    setState({ ...state,\n      typeOfAuth: null\n    });\n    props.onLogout();\n  };\n\n  const getAuthOption = () => {\n    if (props.user.name === \"\" && state.typeOfAuth === \"signUp\") {\n      return React.createElement(Signup, {\n        onSignupDataSubmit: handleNewUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    }\n\n    if (props.user.name !== \"\") {\n      return React.createElement(Logout, {\n        logout: handleLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    }\n\n    if (state.typeOfAuth) {\n      return React.createElement(Login, {\n        onLoginDataSubmit: handleLogin,\n        errorMessage: props.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(Auth, {\n        typeOfAuth: typeOfAuth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    }\n  };\n\n  const showAuthOption = getAuthOption();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, showAuthOption);\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  errorMessage: state.auth.errorMessage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onGetUser: (email, password) => dispatch(getUser(email, password)),\n  onLogout: () => dispatch(logout()),\n  onAddNewUser: (email, password, name, userName) => dispatch(addNewUser(email, password, name, userName))\n});\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(AuthContainer);","map":{"version":3,"sources":["/home/mirko/Desktop/mirkosoft/quant-backend-node/quant-frontend-react/src/containers/AuthContainer.js"],"names":["React","useState","compose","connect","getUser","logout","addNewUser","Login","Auth","Logout","Signup","AuthContainer","props","state","setState","typeOfAuth","handleLogin","e","email","password","preventDefault","onGetUser","handleNewUser","name","userName","onAddNewUser","type","handleLogout","onLogout","getAuthOption","user","errorMessage","showAuthOption","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport compose from 'recompose/compose';\r\nimport { connect } from 'react-redux';\r\nimport { getUser, logout, addNewUser } from '../redux/auth/actions'; \r\nimport Login from '../components/auth/Login';\r\nimport Auth from '../components/auth/Auth';\r\nimport Logout from '../components/auth/Logout';\r\nimport Signup from '../components/auth/Signup';\r\n\r\n\r\nconst AuthContainer = props => {\r\n\r\n    const [state, setState] = useState({\r\n        typeOfAuth: null\r\n    })\r\n\r\n    const handleLogin = (e, email, password) => {\r\n        e.preventDefault();\r\n        props.onGetUser(email, password);\r\n    }\r\n\r\n    const handleNewUser = (e, {email, password, name, userName}) => {\r\n        e.preventDefault();\r\n        props.onAddNewUser(email, password, name, userName)\r\n    }\r\n\r\n    const typeOfAuth = (type) => {\r\n        setState({\r\n            ...state,\r\n            typeOfAuth: type\r\n        });\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        setState({\r\n            ...state,\r\n            typeOfAuth: null\r\n        });\r\n        props.onLogout();\r\n    }\r\n\r\n    const getAuthOption = () => {\r\n        if(props.user.name === \"\" && state.typeOfAuth === \"signUp\"){\r\n            return (\r\n                <Signup\r\n                     onSignupDataSubmit={handleNewUser}\r\n                />\r\n            )\r\n        }\r\n        if(props.user.name !== \"\"){\r\n            return (\r\n                <Logout\r\n                    logout={handleLogout}\r\n                />\r\n            )\r\n        }\r\n        if(state.typeOfAuth){\r\n            return (\r\n                <Login \r\n                    onLoginDataSubmit={handleLogin}\r\n                    errorMessage={props.errorMessage}\r\n                />\r\n            )\r\n        }else{\r\n            return (\r\n                <Auth \r\n                    typeOfAuth={typeOfAuth}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const showAuthOption = getAuthOption();\r\n\r\n    return(\r\n        <div>\r\n            {showAuthOption}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user,\r\n    errorMessage: state.auth.errorMessage\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onGetUser: (email, password) => dispatch(getUser(email, password)),\r\n    onLogout: () => dispatch(logout()),\r\n    onAddNewUser: (email, password, name, userName) => dispatch(addNewUser(email, password, name, userName))\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(AuthContainer);"]},"metadata":{},"sourceType":"module"}