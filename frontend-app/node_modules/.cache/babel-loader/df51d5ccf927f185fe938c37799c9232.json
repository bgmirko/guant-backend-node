{"ast":null,"code":"//Action Types\nexport const GET_PERFORMERS = 'performer/GET_PERFORMERS';\nexport const GET_PERFORMERS_SUCCESS = 'performer/GET_PERFORMERS_SUCCESS';\nexport const GET_PERFORMERS_ERROR = 'performer/GET_PERFORMERS_ERROR';\nexport const ADD_NEW_PERFORMER = 'performer/ADD_NEW_PERFORMER';\nexport const NEW_PERFORMER_SUCCESS = 'performer/NEW_PERFORMER_SUCCESS';\nexport const NEW_PERFORMER_ERROR = 'performer/NEW_PERFORMER_ERROR';\nexport const DELETE_PERFORMER = 'performer/DELETE_PERFORMER';\nexport const EDIT_PERFORMER = 'performer/EDIT_PERFORMER'; //Action creators\n\nexport const getPerformers = () => ({\n  type: GET_PERFORMERS\n});\nexport const getPerformersSuccess = data => ({\n  type: GET_PERFORMERS_SUCCESS,\n  payload: data\n});\nexport const getPerformersError = error => ({\n  type: GET_PERFORMERS_ERROR,\n  payload: error\n});\nexport const addNewPerformer = (name, age, category) => ({\n  type: ADD_NEW_PERFORMER,\n  name: name,\n  age: age,\n  category: category\n});\nexport const newPerformerSuccess = data => ({\n  type: NEW_PERFORMER_SUCCESS,\n  payload: data\n});\nexport const newPerformerError = error => ({\n  type: NEW_PERFORMER_ERROR,\n  payload: error\n});\nexport const deletePerformer = _id => ({\n  type: DELETE_PERFORMER,\n  _id: _id\n});\nexport const editPerformer = (_id, name, age, category) => ({\n  type: EDIT_PERFORMER,\n  _id: _id,\n  name: name,\n  age: age,\n  category: category\n});","map":{"version":3,"sources":["/home/mirko/Desktop/mirkosoft/quant-backend-node/quant-frontend-react/src/redux/performers/actions.js"],"names":["GET_PERFORMERS","GET_PERFORMERS_SUCCESS","GET_PERFORMERS_ERROR","ADD_NEW_PERFORMER","NEW_PERFORMER_SUCCESS","NEW_PERFORMER_ERROR","DELETE_PERFORMER","EDIT_PERFORMER","getPerformers","type","getPerformersSuccess","data","payload","getPerformersError","error","addNewPerformer","name","age","category","newPerformerSuccess","newPerformerError","deletePerformer","_id","editPerformer"],"mappings":"AAAA;AACA,OAAO,MAAMA,cAAc,GAAG,0BAAvB;AACP,OAAO,MAAMC,sBAAsB,GAAG,kCAA/B;AACP,OAAO,MAAMC,oBAAoB,GAAG,gCAA7B;AAEP,OAAO,MAAMC,iBAAiB,GAAG,6BAA1B;AACP,OAAO,MAAMC,qBAAqB,GAAG,iCAA9B;AACP,OAAO,MAAMC,mBAAmB,GAAG,+BAA5B;AAEP,OAAO,MAAMC,gBAAgB,GAAG,4BAAzB;AAEP,OAAO,MAAMC,cAAc,GAAG,0BAAvB,C,CAIP;;AACA,OAAO,MAAMC,aAAa,GAAG,OAAO;AAChCC,EAAAA,IAAI,EAAET;AAD0B,CAAP,CAAtB;AAIP,OAAO,MAAMU,oBAAoB,GAAIC,IAAD,KAAW;AAC3CF,EAAAA,IAAI,EAAER,sBADqC;AAE3CW,EAAAA,OAAO,EAAED;AAFkC,CAAX,CAA7B;AAKP,OAAO,MAAME,kBAAkB,GAAIC,KAAD,KAAY;AAC1CL,EAAAA,IAAI,EAAEP,oBADoC;AAE1CU,EAAAA,OAAO,EAAEE;AAFiC,CAAZ,CAA3B;AAMP,OAAO,MAAMC,eAAe,GAAG,CAACC,IAAD,EAAOC,GAAP,EAAYC,QAAZ,MAA0B;AACrDT,EAAAA,IAAI,EAAEN,iBAD+C;AAErDa,EAAAA,IAAI,EAAEA,IAF+C;AAGrDC,EAAAA,GAAG,EAAEA,GAHgD;AAIrDC,EAAAA,QAAQ,EAAEA;AAJ2C,CAA1B,CAAxB;AAOP,OAAO,MAAMC,mBAAmB,GAAIR,IAAD,KAAW;AAC1CF,EAAAA,IAAI,EAAEL,qBADoC;AAE1CQ,EAAAA,OAAO,EAAED;AAFiC,CAAX,CAA5B;AAKP,OAAO,MAAMS,iBAAiB,GAAIN,KAAD,KAAY;AACzCL,EAAAA,IAAI,EAAEJ,mBADmC;AAEzCO,EAAAA,OAAO,EAAEE;AAFgC,CAAZ,CAA1B;AAKP,OAAO,MAAMO,eAAe,GAAIC,GAAD,KAAU;AACrCb,EAAAA,IAAI,EAAEH,gBAD+B;AAErCgB,EAAAA,GAAG,EAAEA;AAFgC,CAAV,CAAxB;AAKP,OAAO,MAAMC,aAAa,GAAG,CAACD,GAAD,EAAMN,IAAN,EAAYC,GAAZ,EAAiBC,QAAjB,MAA+B;AACxDT,EAAAA,IAAI,EAAEF,cADkD;AAExDe,EAAAA,GAAG,EAAEA,GAFmD;AAGxDN,EAAAA,IAAI,EAAEA,IAHkD;AAIxDC,EAAAA,GAAG,EAAEA,GAJmD;AAKxDC,EAAAA,QAAQ,EAAEA;AAL8C,CAA/B,CAAtB","sourcesContent":["//Action Types\r\nexport const GET_PERFORMERS = 'performer/GET_PERFORMERS';\r\nexport const GET_PERFORMERS_SUCCESS = 'performer/GET_PERFORMERS_SUCCESS';\r\nexport const GET_PERFORMERS_ERROR = 'performer/GET_PERFORMERS_ERROR';\r\n\r\nexport const ADD_NEW_PERFORMER = 'performer/ADD_NEW_PERFORMER';\r\nexport const NEW_PERFORMER_SUCCESS = 'performer/NEW_PERFORMER_SUCCESS';\r\nexport const NEW_PERFORMER_ERROR = 'performer/NEW_PERFORMER_ERROR';\r\n\r\nexport const DELETE_PERFORMER = 'performer/DELETE_PERFORMER';\r\n\r\nexport const EDIT_PERFORMER = 'performer/EDIT_PERFORMER';\r\n\r\n\r\n\r\n//Action creators\r\nexport const getPerformers = () => ({\r\n    type: GET_PERFORMERS\r\n});\r\n\r\nexport const getPerformersSuccess = (data) => ({\r\n    type: GET_PERFORMERS_SUCCESS,\r\n    payload: data\r\n});\r\n\r\nexport const getPerformersError = (error) => ({\r\n    type: GET_PERFORMERS_ERROR,\r\n    payload: error\r\n});\r\n\r\n\r\nexport const addNewPerformer = (name, age, category) => ({\r\n    type: ADD_NEW_PERFORMER,\r\n    name: name,\r\n    age: age,\r\n    category: category\r\n});\r\n\r\nexport const newPerformerSuccess = (data) => ({\r\n    type: NEW_PERFORMER_SUCCESS,\r\n    payload: data\r\n});\r\n\r\nexport const newPerformerError = (error) => ({\r\n    type: NEW_PERFORMER_ERROR,\r\n    payload: error\r\n});\r\n\r\nexport const deletePerformer = (_id) => ({\r\n    type: DELETE_PERFORMER,\r\n    _id: _id\r\n});\r\n\r\nexport const editPerformer = (_id, name, age, category) => ({\r\n    type: EDIT_PERFORMER,\r\n    _id: _id,\r\n    name: name,\r\n    age: age,\r\n    category: category\r\n});\r\n"]},"metadata":{},"sourceType":"module"}